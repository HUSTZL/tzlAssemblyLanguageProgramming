.386
OUTPUT MACRO BUF
		PUSH DX
		PUSH AX
		LEA DX, BUF
		MOV AH, 9H
		INT 21H
		POP AX
		POP DX
	ENDM

DATA SEGMENT USE16
N		EQU	8
STRIN	DB	'MOV', 0, 'LEA', 0, 'LOVER', 0, 'HELLO', 0, 'GT', 0, 'LT', 0, 'FUCK', 0, 'TEMP', 0
SUBS	DB	'LOVER', 0
LENSUB	EQU	($-SUBS)
OUT1	DB	'FIND', 0AH, 0DH, '$'
OUT2	DB	'ERROR', 0AH, 0DH, '$'
DATA ENDS

STACK SEGMENT USE16 STACK
		DW	200 DUP(0)
STACK ENDS

CODE SEGMENT USE16
	ASSUME CS:CODE, DS:DATA, ES:DATA, SS:STACK
START:	MOV AX, DATA
		MOV DS, AX
		MOV ES, AX
		MOV DI, OFFSET STRIN
		MOV SI, OFFSET SUBS
		MOV DX, N
		MOV AL, '0'
		CLD
		MOV CX, LENSUB
LOOPA:	REPE CMPSB
		JE 	FIND
		PUSH CX
		MOV CX, LENSUB
		REP SCASB
		POP CX
		MOV SI, OFFSET SUBS
		DEC DX
		CMP DX, 0
		JNE LOOPA
FIND:	OUTPUT OUT1
		JMP EXIT
NOTFIN:	OUTPUT OUT2
EXIT:	MOV AH, 4CH
		INT 21H
CODE ENDS
	END START